-- A type with a record spec

type A = ACons { x : Float, y : Float }

-- A type with more complex spec

type B
    = B1Cons
      { x : Float
      , y : Float
      }
    | B2Cons String Integer
    | B3Cons

-- With a lack of spacing

type C=CCons{x:Float,y:Float}

-- Tuples

type D = DCons (String, Float, {x:String, y:Float})

